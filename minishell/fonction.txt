# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    fonction.txt                                       :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: xuluu <marvin@42.fr>                       +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/05/23 19:26:17 by xuluu             #+#    #+#              #
#    Updated: 2023/05/23 19:26:22 by xuluu            ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

1. Fonctions:
	printf
	write

	malloc
	free

	open
	read
	close
	
	* readline
		get a line form the terminal

	* rl_clear_history
		frees data that the "readline" library saves in the histroy list

	/*creer un nouvelle line si SIGINT (ctrl + C)*/
	* rl_on_new_line
		make a new line after a command
	* rl_replace_line
	* rl_redisplay
		redisplay a command which we used
	* add_history
		saves the line passed as parameter in the history so it can be retrieved later in the terminal

	access
		check the file named by the pathname
	
	fork
		creating 2 process
	wait
	waitpid
	wait3
	wait4
		permet attendre

	signal
	sigaction
	sigemptyset
	sigaddset
	kill
	
	exit
	* getcwd
		get PATH for the command "pwd"
	* chdir
		change the directory as "cd"

	* stat
		get file status
	* lstat
	* fstat

	unlink
		deletes a file

	execve
		execute program
	
	/* > >> */
	dup
		create a copy of the file descriptor 
	dup2
	
	/* | */
	pipe
		is a medium for communication between processes.
		One process (filedes[1]) writes data to the pipe, 
		and another process (filedes[0]) reads the data from the pipe

	* opendir
		opens a directory
	* readdir
		list the files in the directory
	* closedir
		closes the directory

	* strerror
		return string describing error number
	* perror
		print a system error message
	
	* isatty
		verifier a file in the terminal
	* ttyname
		return name of a terminal
	* ttyslot

	* ioctl
		control a device (a file)

	* getenv
		recuperer la valeur de la variable
		ou null si la variable n'existe pas

	* tcsetattr
	* tcgetattr

	* tgetent
	tgetflag
	tgetnum
	tgetstr
	tgoto
	tputs
